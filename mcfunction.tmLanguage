<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
  <dict>
    <key>name</key>
    <string>mcfunction</string>
    <key>scopeName</key>
    <string>source.mcfunction</string>
    <key>fileTypes</key>
    <array>
      <string>mcfunction</string>
    </array>
    <key>patterns</key>
    <array>
      <dict>
        <key>include</key>
        <string>#comment</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#command</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#unknown</string>
      </dict>
    </array>
    <key>repository</key>
    <dict>
      <key>comment</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>meta.comment.todo.mcfunction</string>
            <key>match</key>
            <string>^\s*(#)\s*((?:TODO|FIXME|DELETEME)\b.*)$</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>comment.number-sign.mcfunction</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>markup.bold.mcfunction</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>name</key>
            <string>meta.comment.annotation.mcfunction</string>
            <key>match</key>
            <string>^\s*(#)\s*(\@\w*)\b(.*)$</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>comment.number-sign.mcfunction</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>markup.bold.mcfunction</string>
              </dict>
              <key>3</key>
              <dict>
                <key>name</key>
                <string>comment.number-sign.mcfunction</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>name</key>
            <string>meta.comment.annotation.mcfunction</string>
            <key>match</key>
            <string>^\s*(##)\s*(.*)$</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>comment.number-sign.mcfunction</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>markup.heading.mcfunction</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>name</key>
            <string>meta.comment.mcfunction</string>
            <key>match</key>
            <string>^\s*(#.*)$</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>comment.number-sign.mcfunction</string>
              </dict>
            </dict>
          </dict>
        </array>
      </dict>
      <key>command</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>meta.command.mcfunction</string>
            <key>begin</key>
            <string>^\s*([a-z_][a-z0-9_]*)[ \n]</string>
            <key>end</key>
            <string>$</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>keyword.control.mcfunction</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>begin</key>
                <string>(?&lt;= )</string>
                <key>end</key>
                <string>[ \n]</string>
                <key>contentName</key>
                <string>meta.command.token.mcfunction</string>
                <key>patterns</key>
                <array>
                  <dict>
                    <key>include</key>
                    <string>#command.tokens</string>
                  </dict>
                </array>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>unknown</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>meta.unknown.mcfunction</string>
            <key>match</key>
            <string>^(.*)$</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>invalid.illegal.mcfunction</string>
              </dict>
            </dict>
          </dict>
        </array>
      </dict>
      <key>command.tokens</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#command.token.nbt_compound</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#command.token.nbt_list</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#command.token.selector_with_arguments</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#command.token.selector_without_arguments</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#command.token.block_predicate</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#command.token.tagged_block_predicate</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#command.token.resource_location</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#command.token.tagged_resource_location</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#command.token.range</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#command.token.number</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#command.token.coordinate</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#command.token.boolean</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#command.token.operation</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#command.token.root_redirect</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#command.token.literal</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#command.token.uuid</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#command.token.fakeplayer</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#command.token.nbt_path</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#command.token.unquoted_string</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#command.token.quoted_string</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#command.token.unknown</string>
          </dict>
        </array>
      </dict>
      <key>command.token.selector_without_arguments</key>
      <dict>
        <key>name</key>
        <string>meta.command.token.selector_without_arguments.mcfunction</string>
        <key>match</key>
        <string>(?&lt;= )(\@[a-z])(?=[ \n])</string>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>support.class.mcfunction</string>
          </dict>
        </dict>
      </dict>
      <key>command.token.resource_location</key>
      <dict>
        <key>name</key>
        <string>meta.command.token.resource_location.mcfunction</string>
        <key>match</key>
        <string>(?&lt;= )([a-z0-9_\.\-]+)(\:)([a-z0-9_\.\-\/]+)(?=[ \n])</string>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>entity.name.function.mcfunction</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>entity.name.function.mcfunction</string>
          </dict>
          <key>3</key>
          <dict>
            <key>name</key>
            <string>entity.name.function.mcfunction</string>
          </dict>
        </dict>
      </dict>
      <key>command.token.tagged_resource_location</key>
      <dict>
        <key>name</key>
        <string>meta.command.token.tagged_resource_location.mcfunction</string>
        <key>match</key>
        <string>(?&lt;= )(\#)([a-z0-9_\.\-]+)(\:)([a-z0-9_\.\-\/]+)(?=[ \n])</string>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>entity.name.function.mcfunction</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>entity.name.function.mcfunction</string>
          </dict>
          <key>3</key>
          <dict>
            <key>name</key>
            <string>entity.name.function.mcfunction</string>
          </dict>
          <key>4</key>
          <dict>
            <key>name</key>
            <string>entity.name.function.mcfunction</string>
          </dict>
        </dict>
      </dict>
      <key>command.token.range</key>
      <dict>
        <key>name</key>
        <string>meta.command.token.range.mcfunction</string>
        <key>match</key>
        <string>(?&lt;= )(\-?\d*\.?\d+)?(\.\.)(\-?\d*\.?\d+)?(?=[ \n])</string>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>constant.numeric.mcfunction</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>keyword.control.mcfunction</string>
          </dict>
          <key>3</key>
          <dict>
            <key>name</key>
            <string>constant.numeric.mcfunction</string>
          </dict>
        </dict>
      </dict>
      <key>command.token.number</key>
      <dict>
        <key>name</key>
        <string>meta.command.token.number.mcfunction</string>
        <key>match</key>
        <string>(?&lt;= )(\-?\d*\.?\d+)(?=[ \n])</string>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>constant.numeric.mcfunction</string>
          </dict>
        </dict>
      </dict>
      <key>command.token.coordinate</key>
      <dict>
        <key>name</key>
        <string>meta.command.token.coordinate.mcfunction</string>
        <key>match</key>
        <string>(?&lt;= )([\~\^])(\-?\d*\.?\d+)?(?=[ \n])</string>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>constant.numeric.mcfunction</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>constant.numeric.mcfunction</string>
          </dict>
        </dict>
      </dict>
      <key>command.token.boolean</key>
      <dict>
        <key>name</key>
        <string>meta.command.token.boolean.mcfunction</string>
        <key>match</key>
        <string>(?&lt;= )(true|false)(?=[ \n])</string>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>constant.numeric.mcfunction</string>
          </dict>
        </dict>
      </dict>
      <key>command.token.operation</key>
      <dict>
        <key>name</key>
        <string>meta.command.token.operation.mcfunction</string>
        <key>match</key>
        <string>(?&lt;= )(\%\=|\*\=|\+\=|\-\=|\/\=|\&lt;|\=|\&gt;|\&gt;\&lt;|\&lt;\=|\&gt;\=)(?=[ \n])</string>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>constant.numeric.mcfunction</string>
          </dict>
        </dict>
      </dict>
      <key>command.token.literal</key>
      <dict>
        <key>name</key>
        <string>meta.command.token.literal.mcfunction</string>
        <key>match</key>
        <string>(?&lt;= )([a-z_][a-z0-9_]*)(?=[ \n])</string>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>entity.name.mcfunction</string>
          </dict>
        </dict>
      </dict>
      <key>command.token.uuid</key>
      <dict>
        <key>name</key>
        <string>meta.command.token.uuid.mcfunction</string>
        <key>match</key>
        <string>(?&lt;= )([0-9a-fA-F]+(?:(-)[0-9a-fA-F]+){4})(?=[ \n])</string>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>support.class.mcfunction</string>
          </dict>
        </dict>
      </dict>
      <key>command.token.fakeplayer</key>
      <dict>
        <key>name</key>
        <string>meta.command.token.fakeplayer.mcfunction</string>
        <key>match</key>
        <string>(?&lt;= )([\#\$\%][\w\.\-]+)(?=[ \n])</string>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>support.class.mcfunction</string>
          </dict>
        </dict>
      </dict>
      <key>command.token.unquoted_string</key>
      <dict>
        <key>name</key>
        <string>meta.command.token.unquoted_string.mcfunction</string>
        <key>match</key>
        <string>(?&lt;= )([\w\.\-\#\$\%]+)(?=[ \n])</string>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>string.unquoted.mcfunction</string>
          </dict>
        </dict>
      </dict>
      <key>command.token.unknown</key>
      <dict>
        <key>name</key>
        <string>meta.command.token.unknown.mcfunction</string>
        <key>match</key>
        <string>(?&lt;= )([^ \n]*)(?=[ \n])</string>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>invalid.illegal.mcfunction</string>
          </dict>
        </dict>
      </dict>
      <key>command.token.root_redirect</key>
      <dict>
        <key>name</key>
        <string>meta.command.token.root_redirect.mcfunction</string>
        <key>match</key>
        <string>(?&lt;= )(run) ?([a-z_][a-z0-9_]*)?(?=[ \n])</string>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>entity.name.mcfunction</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>keyword.control.mcfunction</string>
          </dict>
        </dict>
      </dict>
      <key>command.token.nbt_compound</key>
      <dict>
        <key>name</key>
        <string>meta.command.token.nbt_compound.mcfunction</string>
        <key>begin</key>
        <string>(?&lt;= )(\{)</string>
        <key>end</key>
        <string>(?=\n)|(\})([^ \n]*)</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>variable.language.mcfunction</string>
          </dict>
        </dict>
        <key>endCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>variable.language.mcfunction</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>invalid.illegal.mcfunction</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#nbt.compound</string>
          </dict>
        </array>
      </dict>
      <key>command.token.nbt_list</key>
      <dict>
        <key>name</key>
        <string>meta.command.token.nbt_list.mcfunction</string>
        <key>begin</key>
        <string>(?&lt;= )(\[)</string>
        <key>end</key>
        <string>(?=\n)|(\])([^ \n]*)</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>variable.language.mcfunction</string>
          </dict>
        </dict>
        <key>endCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>variable.language.mcfunction</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>invalid.illegal.mcfunction</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#nbt.list</string>
          </dict>
        </array>
      </dict>
      <key>nbt.compound</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>match</key>
            <string> +</string>
          </dict>
          <dict>
            <key>begin</key>
            <string>(,)? *(\w+|\"[^\n\"]+\") *(\:) *</string>
            <key>end</key>
            <string> *(?=[\n\}\,])</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>variable.language.mcfunction</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>string.interpolated.mcfunction</string>
              </dict>
              <key>3</key>
              <dict>
                <key>name</key>
                <string>variable.language.mcfunction</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#nbt.value</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>match</key>
            <string>[^\n\}\,]+</string>
            <key>name</key>
            <string>invalid.illegal.mcfunction</string>
          </dict>
        </array>
      </dict>
      <key>nbt.list</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>match</key>
            <string> +</string>
          </dict>
          <dict>
            <key>begin</key>
            <string>(,)? *(?=[^\n\]\,])</string>
            <key>end</key>
            <string> *(?=[\n\]\,])</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>variable.language.mcfunction</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#nbt.value</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>match</key>
            <string>[^\n\]\,]+</string>
            <key>name</key>
            <string>invalid.illegal.mcfunction</string>
          </dict>
        </array>
      </dict>
      <key>nbt.value</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>(\{)</string>
            <key>end</key>
            <string>(?=\n)|(\})</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>variable.language.mcfunction</string>
              </dict>
            </dict>
            <key>endCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>variable.language.mcfunction</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#nbt.compound</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>begin</key>
            <string>(\[)</string>
            <key>end</key>
            <string>(?=\n)|(\])</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>variable.language.mcfunction</string>
              </dict>
            </dict>
            <key>endCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>variable.language.mcfunction</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#nbt.list</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>begin</key>
            <string>(\")</string>
            <key>end</key>
            <string>(?=\n)|(\")</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>string.quoted.mcfunction</string>
              </dict>
            </dict>
            <key>endCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>string.quoted.mcfunction</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#common.quoted_string</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>match</key>
            <string>(true|false)</string>
            <key>name</key>
            <string>constant.numeric.mcfunction</string>
          </dict>
          <dict>
            <key>match</key>
            <string>(\-?\d*\.?\d+)</string>
            <key>name</key>
            <string>constant.numeric.mcfunction</string>
          </dict>
          <dict>
            <key>match</key>
            <string>([\w\.\-\#\$\%]+)</string>
            <key>name</key>
            <string>string.unquoted.mcfunction</string>
          </dict>
          <dict>
            <key>match</key>
            <string>[^\n\,\]\}]+</string>
            <key>name</key>
            <string>invalid.illegal.mcfunction</string>
          </dict>
        </array>
      </dict>
      <key>command.token.quoted_string</key>
      <dict>
        <key>name</key>
        <string>meta.command.token.quoted_string.mcfunction</string>
        <key>begin</key>
        <string>(?&lt;= )(\")</string>
        <key>end</key>
        <string>(?=\n)|(\")([^ \n]*)</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>string.quoted.mcfunction</string>
          </dict>
        </dict>
        <key>endCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>string.quoted.mcfunction</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>invalid.illegal.mcfunction</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#common.quoted_string</string>
          </dict>
        </array>
      </dict>
      <key>command.token.block_predicate</key>
      <dict>
        <key>name</key>
        <string>meta.command.token.block_predicate.mcfunction</string>
        <key>begin</key>
        <string>(?&lt;= )([a-z0-9_\.\-]+)(\:)([a-z0-9_\.\-\/]+)(\[)</string>
        <key>end</key>
        <string>(?=\n)|(\])([^ \n]*)</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>entity.name.function.mcfunction</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>entity.name.function.mcfunction</string>
          </dict>
          <key>3</key>
          <dict>
            <key>name</key>
            <string>entity.name.function.mcfunction</string>
          </dict>
          <key>4</key>
          <dict>
            <key>name</key>
            <string>variable.language.mcfunction</string>
          </dict>
        </dict>
        <key>endCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>variable.language.mcfunction</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>invalid.illegal.mcfunction</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#block_predicate.arguments</string>
          </dict>
        </array>
      </dict>
      <key>command.token.tagged_block_predicate</key>
      <dict>
        <key>name</key>
        <string>meta.command.token.tagged_block_predicate.mcfunction</string>
        <key>begin</key>
        <string>(?&lt;= )(\#)([a-z0-9_\.\-]+)(\:)([a-z0-9_\.\-\/]+)(\[)</string>
        <key>end</key>
        <string>(?=\n)|(\])([^ \n]*)</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>entity.name.function.mcfunction</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>entity.name.function.mcfunction</string>
          </dict>
          <key>3</key>
          <dict>
            <key>name</key>
            <string>entity.name.function.mcfunction</string>
          </dict>
          <key>4</key>
          <dict>
            <key>name</key>
            <string>entity.name.function.mcfunction</string>
          </dict>
          <key>5</key>
          <dict>
            <key>name</key>
            <string>variable.language.mcfunction</string>
          </dict>
        </dict>
        <key>endCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>variable.language.mcfunction</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>invalid.illegal.mcfunction</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#block_predicate.arguments</string>
          </dict>
        </array>
      </dict>
      <key>command.token.selector_with_arguments</key>
      <dict>
        <key>name</key>
        <string>meta.command.token.selector_with_arguments.mcfunction</string>
        <key>begin</key>
        <string>(?&lt;= )(\@[a-z])(\[)</string>
        <key>end</key>
        <string>(?=\n)|(\])([^ \n]*)</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>support.class.mcfunction</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>support.class.mcfunction</string>
          </dict>
        </dict>
        <key>endCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>support.class.mcfunction</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>invalid.illegal.mcfunction</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>meta.selector.argument_spacing.mcfunction</string>
            <key>match</key>
            <string> +</string>
          </dict>
          <dict>
            <key>name</key>
            <string>meta.selector.argument.mcfunction</string>
            <key>begin</key>
            <string>([a-z_][a-z0-9_]*) *(\=) *(\!)? *</string>
            <key>end</key>
            <string>(\,)(?=[\]\n])|(\,)|(?=[\]\n])</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>variable.other.mcfunction</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>support.class.mcfunction</string>
              </dict>
              <key>3</key>
              <dict>
                <key>name</key>
                <string>keyword.control.mcfunction</string>
              </dict>
            </dict>
            <key>endCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>invalid.illegal.mcfunction</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>support.class.mcfunction</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#selector.argument.resource_location</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#selector.argument.tagged_resource_location</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#selector.argument.range</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#selector.argument.number</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#selector.argument.boolean</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#selector.argument.unquoted_string</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#selector.argument.quoted_string</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#selector.argument.property_map</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#selector.argument.nbt_compound</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#selector.argument.unknown</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>name</key>
            <string>invalid.illegal.mcfunction</string>
            <key>match</key>
            <string>[^\]\n]+</string>
          </dict>
        </array>
      </dict>
      <key>command.token.nbt_path</key>
      <dict>
        <key>name</key>
        <string>meta.command.token.nbt_path.mcfunction</string>
        <key>begin</key>
        <string>(?&lt;= )(?=\w+[\.\[\{])</string>
        <key>end</key>
        <string>(?=[ \n])</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#nbt_path.property</string>
          </dict>
        </array>
      </dict>
      <key>nbt_path.property</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>(\.)?(\w+)(\[)</string>
            <key>end</key>
            <string>(\])|(?=\n)</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>variable.language.mcfunction</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>string.interpolated.mcfunction</string>
              </dict>
              <key>3</key>
              <dict>
                <key>name</key>
                <string>variable.language.mcfunction</string>
              </dict>
            </dict>
            <key>endCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>variable.language.mcfunction</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#nbt_path.index</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>begin</key>
            <string>(\.)?(\w+)(\{)</string>
            <key>end</key>
            <string>(\})|(?=\n)</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>variable.language.mcfunction</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>string.interpolated.mcfunction</string>
              </dict>
              <key>3</key>
              <dict>
                <key>name</key>
                <string>variable.language.mcfunction</string>
              </dict>
            </dict>
            <key>endCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>variable.language.mcfunction</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#nbt.compound</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>match</key>
            <string>(\.)?(\w+)</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>variable.language.mcfunction</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>string.interpolated.mcfunction</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>match</key>
            <string>(\.)(?=\.)</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>invalid.illegal.mcfunction</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>match</key>
            <string>[^\.\s]+</string>
            <key>name</key>
            <string>invalid.illegal.mcfunction</string>
          </dict>
        </array>
      </dict>
      <key>nbt_path.index</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#nbt.list</string>
          </dict>
        </array>
      </dict>
      <key>block_predicate.arguments</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>meta.block_predicate.argument_spacing.mcfunction</string>
            <key>match</key>
            <string> +</string>
          </dict>
          <dict>
            <key>name</key>
            <string>meta.block_predicate.argument.mcfunction</string>
            <key>begin</key>
            <string>([a-z_][a-z0-9_]*) *(\=) *</string>
            <key>end</key>
            <string>(\,)(?=[\]\n])|(\,)|(?=[\]\n])</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>variable.other.mcfunction</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>variable.language.mcfunction</string>
              </dict>
            </dict>
            <key>endCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>invalid.illegal.mcfunction</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>variable.language.mcfunction</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#block_predicate.argument.number</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#block_predicate.argument.boolean</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#block_predicate.argument.literal</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>block_predicate.argument.number</key>
      <dict>
        <key>name</key>
        <string>meta.block_predicate.argument.number.mcfunction</string>
        <key>match</key>
        <string>(\-?\d*\.?\d+)(?= *[\,\]\n])</string>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>constant.numeric.mcfunction</string>
          </dict>
        </dict>
      </dict>
      <key>block_predicate.argument.boolean</key>
      <dict>
        <key>name</key>
        <string>meta.block_predicate.argument.boolean.mcfunction</string>
        <key>match</key>
        <string>(true|false)(?= *[\,\]\n])</string>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>constant.numeric.mcfunction</string>
          </dict>
        </dict>
      </dict>
      <key>block_predicate.argument.literal</key>
      <dict>
        <key>name</key>
        <string>meta.block_predicate.argument.literal.mcfunction</string>
        <key>match</key>
        <string>([a-z_][a-z0-9_]*)(?= *[\,\]\n])</string>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>entity.name.mcfunction</string>
          </dict>
        </dict>
      </dict>
      <key>selector.argument.resource_location</key>
      <dict>
        <key>name</key>
        <string>meta.selector.argument.resource_location.mcfunction</string>
        <key>match</key>
        <string>([a-z0-9_\.\-]+)(\:)([a-z0-9_\.\-\/]+)(?= *[\,\]\n])</string>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>entity.name.function.mcfunction</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>entity.name.function.mcfunction</string>
          </dict>
          <key>3</key>
          <dict>
            <key>name</key>
            <string>entity.name.function.mcfunction</string>
          </dict>
        </dict>
      </dict>
      <key>selector.argument.tagged_resource_location</key>
      <dict>
        <key>name</key>
        <string>meta.selector.argument.tagged_resource_location.mcfunction</string>
        <key>match</key>
        <string>(\#)([a-z0-9_\.\-]+)(\:)([a-z0-9_\.\-\/]+)(?= *[\,\]\n])</string>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>entity.name.function.mcfunction</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>entity.name.function.mcfunction</string>
          </dict>
          <key>3</key>
          <dict>
            <key>name</key>
            <string>entity.name.function.mcfunction</string>
          </dict>
          <key>4</key>
          <dict>
            <key>name</key>
            <string>entity.name.function.mcfunction</string>
          </dict>
        </dict>
      </dict>
      <key>selector.argument.range</key>
      <dict>
        <key>name</key>
        <string>meta.selector.argument.range.mcfunction</string>
        <key>match</key>
        <string>(\-?\d*\.?\d+)?(\.\.)(\-?\d*\.?\d+)?(?= *[\,\]\n])</string>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>constant.numeric.mcfunction</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>keyword.control.mcfunction</string>
          </dict>
          <key>3</key>
          <dict>
            <key>name</key>
            <string>constant.numeric.mcfunction</string>
          </dict>
        </dict>
      </dict>
      <key>selector.argument.number</key>
      <dict>
        <key>name</key>
        <string>meta.selector.argument.number.mcfunction</string>
        <key>match</key>
        <string>(\-?\d*\.?\d+)(?= *[\,\]\n])</string>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>constant.numeric.mcfunction</string>
          </dict>
        </dict>
      </dict>
      <key>selector.argument.boolean</key>
      <dict>
        <key>name</key>
        <string>meta.selector.argument.boolean.mcfunction</string>
        <key>match</key>
        <string>(true|false)(?= *[\,\]\n])</string>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>constant.numeric.mcfunction</string>
          </dict>
        </dict>
      </dict>
      <key>selector.argument.unquoted_string</key>
      <dict>
        <key>name</key>
        <string>meta.selector.argument.unquoted_string.mcfunction</string>
        <key>match</key>
        <string>([\w\.\-\#\$\%]+)(?= *[\,\]\n])</string>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>string.unquoted.mcfunction</string>
          </dict>
        </dict>
      </dict>
      <key>selector.argument.unknown</key>
      <dict>
        <key>name</key>
        <string>meta.selector.argument.unknown.mcfunction</string>
        <key>match</key>
        <string>([^\]\n\,]+)</string>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>invalid.illegal.mcfunction</string>
          </dict>
        </dict>
      </dict>
      <key>selector.argument.quoted_string</key>
      <dict>
        <key>name</key>
        <string>meta.selector.argument.quoted_string.mcfunction</string>
        <key>begin</key>
        <string>(\")</string>
        <key>end</key>
        <string>(?=\n)|(\")([^\]\,\n]*)</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>string.quoted.mcfunction</string>
          </dict>
        </dict>
        <key>endCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>string.quoted.mcfunction</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>invalid.illegal.mcfunction</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#common.quoted_string</string>
          </dict>
        </array>
      </dict>
      <key>selector.argument.property_map</key>
      <dict>
        <key>name</key>
        <string>meta.selector.argument.property_map.mcfunction</string>
        <key>begin</key>
        <string>(\{)(?= *([a-z0-9_\.\-]+\:[a-z0-9_\.\-\/]+|[a-z0-9_\.\-\/]+|([\w\.\-\#\$\%]+)) *(\=))</string>
        <key>end</key>
        <string>(?=\n)|(\})([^\]\,\n]*)</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>variable.language.mcfunction</string>
          </dict>
        </dict>
        <key>endCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>variable.language.mcfunction</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>invalid.illegal.mcfunction</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#property_map</string>
          </dict>
        </array>
      </dict>
      <key>selector.argument.nbt_compound</key>
      <dict>
        <key>name</key>
        <string>meta.selector.argument.nbt_compound.mcfunction</string>
        <key>begin</key>
        <string>(\{)</string>
        <key>end</key>
        <string>(?=\n)|(\})([^\]\,\n]*)</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>variable.language.mcfunction</string>
          </dict>
        </dict>
        <key>endCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>variable.language.mcfunction</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>invalid.illegal.mcfunction</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#nbt.compound</string>
          </dict>
        </array>
      </dict>
      <key>property_map</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>match</key>
            <string> +</string>
          </dict>
          <dict>
            <key>begin</key>
            <string>(,)? *([\w\.\-\#\$\%]+) *(\=) *</string>
            <key>end</key>
            <string> *(?=[\n\}\,])</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>variable.language.mcfunction</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>string.unquoted.mcfunction</string>
              </dict>
              <key>3</key>
              <dict>
                <key>name</key>
                <string>variable.language.mcfunction</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#property_map.values</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>begin</key>
            <string>(,)? *([a-z0-9_\.\-]+\:[a-z0-9_\.\-\/]+|[a-z0-9_\.\-\/]+) *(\=) *</string>
            <key>end</key>
            <string> *(?=[\n\}\,])</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>variable.language.mcfunction</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>entity.name.function.mcfunction</string>
              </dict>
              <key>3</key>
              <dict>
                <key>name</key>
                <string>variable.language.mcfunction</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#property_map.values</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>match</key>
            <string>[^\n\}\,]+</string>
            <key>name</key>
            <string>invalid.illegal.mcfunction</string>
          </dict>
        </array>
      </dict>
      <key>property_map.values</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>match</key>
            <string>(true|false)</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>constant.numeric.mcfunction</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>match</key>
            <string>(\-?\d*\.?\d+)?(\.\.)(\-?\d*\.?\d+)?</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>constant.numeric.mcfunction</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>keyword.control.mcfunction</string>
              </dict>
              <key>3</key>
              <dict>
                <key>name</key>
                <string>constant.numeric.mcfunction</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>match</key>
            <string>(\-?\d*\.?\d+)</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>constant.numeric.mcfunction</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>begin</key>
            <string>(\{) *</string>
            <key>end</key>
            <string>(?=\n)|(\})([^\}\,\n]*)</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>variable.language.mcfunction</string>
              </dict>
            </dict>
            <key>endCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>variable.language.mcfunction</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>invalid.illegal.mcfunction</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#property_map</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>common.quoted_string</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>string.quoted.mcfunction</string>
            <key>match</key>
            <string>[^\\\"\n]</string>
          </dict>
          <dict>
            <key>name</key>
            <string>constant.character.escape.mcfunction</string>
            <key>match</key>
            <string>\\[^\n]</string>
          </dict>
          <dict>
            <key>name</key>
            <string>invalid.illegal.mcfunction</string>
            <key>match</key>
            <string>\\</string>
          </dict>
        </array>
      </dict>
    </dict>
  </dict>
</plist>