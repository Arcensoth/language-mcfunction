{
  "name": "mcfunction",
  "scopeName": "source.mcfunction",
  "fileTypes": [
    "mcfunction"
  ],
  "variables": {
    "command.token_l": "(?<= )",
    "command.token_r": "(?=[ \\n])",
    "literal": "[a-z_][a-z0-9_]*",
    "component": "[a-z0-9_\\.\\-]+",
    "number": "\\-?\\d*\\.?\\d+",
    "resource_location": "([a-z0-9_\\.\\-]+)(\\:)([a-z0-9_\\.\\-\\/]+)",
    "tagged_resource_location": "(\\#)([a-z0-9_\\.\\-]+)(\\:)([a-z0-9_\\.\\-\\/]+)",
    "range": "(\\-?\\d*\\.?\\d+)?(\\.\\.)(\\-?\\d*\\.?\\d+)?",
    "coordinate": "([\\~\\^])+(\\-?\\d*\\.?\\d+)?",
    "base_selector": "\\@[a-z]",
    "selector_key": "([a-z_][a-z0-9_]*)(\\=)(\\!?)",
    "group.bracket_flow": "string.regexp.mcfunction",
    "group.numeric_operator": "keyword.control.mcfunction"
  },
  "patterns": [
    {
      "include": "#comment"
    },
    {
      "include": "#command"
    },
    {
      "include": "#unknown"
    }
  ],
  "repository": {
    "comment": {
      "patterns": [
        {
          "name": "meta.comment.mcfunction",
          "match": "^\\s*(#.*)$",
          "captures": {
            "1": {
              "name": "comment.number-sign.mcfunction"
            }
          }
        }
      ]
    },
    "command": {
      "patterns": [
        {
          "name": "meta.command.mcfunction",
          "begin": "^\\s*([a-z_][a-z0-9_]*)[ \\n]",
          "end": "$",
          "beginCaptures": {
            "1": {
              "name": "keyword.control.mcfunction"
            }
          },
          "patterns": [
            {
              "begin": "(?<= )",
              "end": "[ \\n]",
              "contentName": "meta.command.token.mcfunction",
              "patterns": [
                {
                  "include": "#command.tokens"
                }
              ]
            }
          ]
        }
      ]
    },
    "unknown": {
      "patterns": [
        {
          "name": "meta.unknown.mcfunction",
          "match": "^(.*)$",
          "captures": {
            "1": {
              "name": "invalid.illegal.mcfunction"
            }
          }
        }
      ]
    },
    "command.tokens": {
      "patterns": [
        {
          "include": "#command.token.word"
        },
        {
          "include": "#command.token.unknown"
        }
      ]
    },
    "command.token.word": {
      "name": "meta.command.token.word.mcfunction",
      "match": "(?<= )(\\w+)(?=[ \\n])",
      "captures": {
        "1": {
          "name": "string.mcfunction"
        }
      }
    },
    "command.token.unknown": {
      "name": "meta.command.token.unknown.mcfunction",
      "match": "(?<= )([^ \\n]*)(?=[ \\n])",
      "captures": {
        "1": {
          "name": "invalid.illegal.mcfunction"
        }
      }
    }
  }
}